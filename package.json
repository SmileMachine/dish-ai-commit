{
  "name": "dish-ai-commit",
  "displayName": "Dish AI Commit Gen",
  "description": "🤖 AI-Powered VSCode extension for generating standardized Git/SVN commit messages. ✨ Supports multiple AI services: OpenAI, ChatGPT, Ollama, Zhipu, DashScope, Doubao, Gemini and VS Code built-in AI. 🌍 Multi-language support (EN/CN/JP/KR/Other). 📊 Auto-generate weekly reports.",
  "version": "0.7.1",
  "engines": {
    "vscode": "^1.96.0"
  },
  "publisher": "littleCareless",
  "repository": "https://github.com/littleCareless/dish-ai-commit",
  "icon": "images/logo.png",
  "categories": [
    "SCM Providers",
    "Machine Learning",
    "Snippets",
    "Formatters",
    "Other"
  ],
  "keywords": [
    "OpenAI",
    "ChatGPT",
    "Ollama",
    "Vscode",
    "GitEmoji",
    "SvnEmoji",
    "Git Commit",
    "Svn Commit",
    "Conventional Commits",
    "Commitizen",
    "Commit Message",
    "Commit Message Generator",
    "AI Commit",
    "Auto Commit",
    "SCM Providers",
    "SCM",
    "Dish Ai Commit",
    "Zhipu",
    "DashScope",
    "Doubao",
    "Gemini"
  ],
  "extensionDependencies": [
    "vscode.git"
  ],
  "main": "./out/extension.js",
  "activationEvents": [
    "onCommand:dish-ai-commit"
  ],
  "contributes": {
    "commands": [
      {
        "command": "extension.dish-ai-commit",
        "title": "[Dish] AI Commit Generate",
        "category": "[Dish AI Commit]",
        "icon": "/images/icon.svg"
      },
      {
        "command": "dish-ai-commit.selectModel",
        "title": "[Dish] Select AI Model",
        "category": "[Dish AI Commit]",
        "icon": "/images/icon.svg",
        "description": "选择用于生成提交信息的AI模型(OpenAI/Ollama/VS Code Provided)",
        "when": "(config.svn.enabled && svnOpenRepositoryCount > 0) || (config.git.enabled && gitOpenRepositoryCount > 0)"
      },
      {
        "command": "dish-ai-commit.generateWeeklyReport",
        "title": "[Dish] Generate Weekly Report with AI",
        "category": "[Dish AI Commit]",
        "icon": "/images/icon.svg",
        "description": "使用 AI 生成周报"
      },
      {
        "command": "dish-ai-commit.reviewCode",
        "title": "[Dish] Review Code with AI",
        "category": "[Dish AI Commit]",
        "icon": "/images/icon.svg",
        "description": "使用 AI 对代码进行评审"
      }
    ],
    "configuration": {
      "title": "Dish AI Commit",
      "properties": {
        "dish-ai-commit.base.language": {
          "type": "string",
          "default": "Simplified Chinese",
          "description": "Commit message language",
          "enum": [
            "Simplified Chinese",
            "Traditional Chinese",
            "Japanese",
            "Korean",
            "Czech",
            "German",
            "French",
            "Italian",
            "Dutch",
            "Portuguese",
            "Vietnamese",
            "English",
            "Spanish",
            "Swedish",
            "Russian",
            "Bahasa",
            "Polish",
            "Turkish",
            "Thai"
          ],
          "enumDescriptions": [
            "简体中文",
            "繁體中文",
            "にほんご",
            "한국어",
            "česky",
            "Deutsch",
            "française",
            "italiano",
            "Nederlands",
            "português",
            "tiếng Việt",
            "english",
            "español",
            "Svenska",
            "русский",
            "bahasa",
            "Polski",
            "Turkish",
            "ไทย"
          ]
        },
        "dish-ai-commit.base.systemPrompt": {
          "type": "string",
          "default": "",
          "description": "Custom system prompt"
        },
        "dish-ai-commit.base.provider": {
          "type": "string",
          "default": "OpenAI",
          "description": "AI provider",
          "enum": [
            "OpenAI",
            "Ollama",
            "VS Code Provided",
            "Zhipu",
            "DashScope",
            "Doubao",
            "Gemini",
            "Deepseek"
          ]
        },
        "dish-ai-commit.base.model": {
          "type": "string",
          "default": "gpt-3.5-turbo",
          "description": "AI model",
          "scope": "machine"
        },
        "dish-ai-commit.providers.openai.apiKey": {
          "type": "string",
          "default": "",
          "description": "OpenAI API Key"
        },
        "dish-ai-commit.providers.openai.baseUrl": {
          "type": "string",
          "default": "https://api.openai.com/v1",
          "description": "OpenAI API Base URL"
        },
        "dish-ai-commit.providers.zhipu.apiKey": {
          "type": "string",
          "default": "",
          "description": "Zhipu AI API Key"
        },
        "dish-ai-commit.providers.dashscope.apiKey": {
          "type": "string",
          "default": "",
          "description": "DashScope API Key"
        },
        "dish-ai-commit.providers.doubao.apiKey": {
          "type": "string",
          "default": "",
          "description": "Doubao API Key"
        },
        "dish-ai-commit.providers.ollama.baseUrl": {
          "type": "string",
          "default": "http://localhost:11434",
          "description": "Ollama API Base URL"
        },
        "dish-ai-commit.providers.gemini.apiKey": {
          "type": "string",
          "default": "",
          "description": "Gemini AI API Key"
        },
        "dish-ai-commit.providers.deepseek.apiKey": {
          "type": "string",
          "default": "",
          "description": "Deepseek AI API Key"
        },
        "dish-ai-commit.features.codeAnalysis.simplifyDiff": {
          "type": "boolean",
          "default": false,
          "description": "Enable diff content simplification (Warning: Enabling this feature may result in less accurate commit messages)"
        },
        "dish-ai-commit.features.codeAnalysis.maxLineLength": {
          "type": "number",
          "default": 120,
          "description": "Maximum line length after simplification"
        },
        "dish-ai-commit.features.codeAnalysis.contextLines": {
          "type": "number",
          "default": 3,
          "description": "Number of context lines to preserve"
        },
        "dish-ai-commit.features.commitFormat.enableMergeCommit": {
          "type": "boolean",
          "default": false,
          "description": "Allow merging changes from multiple files into a single commit message"
        },
        "dish-ai-commit.features.commitFormat.enableEmoji": {
          "type": "boolean",
          "default": true,
          "description": "Use emoji in commit messages"
        },
        "dish-ai-commit.features.weeklyReport.systemPrompt": {
          "type": "string",
          "default": "",
          "description": "Custom system prompt"
        },
        "dish-ai-commit.features.codeReview.systemPrompt": {
          "type": "string",
          "default": "Custom system prompt",
          "description": "Custom system prompt for code review"
        }
      }
    },
    "menus": {
      "scm/title": [
        {
          "command": "extension.dish-ai-commit",
          "when": "scmProvider =~ /(git|svn)/",
          "group": "navigation"
        }
      ],
      "scm/resourceState/context": [
        {
          "command": "extension.dish-ai-commit",
          "when": "((config.svn.enabled && scmProvider == svn) || (config.git.enabled && scmProvider == git)) && scmResourceGroup != unversioned && scmResourceGroup != external && scmResourceGroup != conflicts && scmResourceGroup != remotechanges",
          "group": "1_modification"
        },
        {
          "command": "dish-ai-commit.reviewCode",
          "when": "((config.svn.enabled && scmProvider == svn) || (config.git.enabled && scmProvider == git)) && scmResourceGroup != unversioned && scmResourceGroup != external && scmResourceGroup != conflicts && scmResourceGroup != remotechanges",
          "group": "1_modification"
        }
      ],
      "scm/resourceFolder/context": [
        {
          "command": "extension.dish-ai-commit",
          "when": "scmProvider =~ /(git|svn)/",
          "group": "inline"
        },
        {
          "command": "dish-ai-commit.reviewCode",
          "when": "scmProvider =~ /(git|svn)/",
          "group": "inline"
        }
      ],
      "commandPalette": [
        {
          "command": "extension.dish-ai-commit",
          "when": "(config.svn.enabled && svnOpenRepositoryCount > 0) || (config.git.enabled && gitOpenRepositoryCount > 0)"
        },
        {
          "command": "dish-ai-commit.selectModel",
          "group": "navigation",
          "when": "(config.svn.enabled && svnOpenRepositoryCount > 0) || (config.git.enabled && gitOpenRepositoryCount > 0)"
        },
        {
          "command": "dish-ai-commit.generateWeeklyReport",
          "when": "true"
        },
        {
          "command": "dish-ai-commit.reviewCode",
          "when": "((config.svn.enabled && svnOpenRepositoryCount > 0) || (config.git.enabled && svnOpenRepositoryCount > 0))"
        }
      ]
    }
  },
  "scripts": {
    "vscode:prepublish": "pnpm run compile",
    "compile": "pnpm run compile:webview && tsc -p ./",
    "compile:webview": "cd src/webview-ui && pnpm install && pnpm run build",
    "watch": "tsc -watch -p ./",
    "pretest": "pnpm run compile && pnpm run lint",
    "lint": "eslint src",
    "test": "vscode-test",
    "prepare": "husky",
    "commit": "git add . && git-cz",
    "release": "standard-version --preset gitmoji-config",
    "changelog": "conventional-changelog -i CHANGELOG.md -s -r 0",
    "update-config": "ts-node ./src/scripts/updateConfig.ts",
    "package": "rm -rf node_modules && rm -rf src/webview-ui/node_modules && npm install && vsce package",
    "publish": "rm -rf node_modules && rm -rf src/webview-ui/node_modules && npm install && vsce publish"
  },
  "devDependencies": {
    "@commitlint/cli": "^19.6.1",
    "@commitlint/config-conventional": "^19.6.0",
    "@stylistic/eslint-plugin-ts": "^2.12.1",
    "@types/jest": "^29.5.14",
    "@types/mocha": "^10.0.10",
    "@types/node": "~16.18.123",
    "@types/vscode": "^1.96.0",
    "@typescript-eslint/eslint-plugin": "^8.19.0",
    "@typescript-eslint/parser": "^8.19.0",
    "@vscode/test-cli": "^0.0.10",
    "@vscode/test-electron": "^2.4.1",
    "commitizen": "^4.3.1",
    "commitlint-config-gitmoji": "^2.3.1",
    "conventional-changelog-gitmoji-config": "^1.5.2",
    "cz-conventional-changelog": "^3.3.0",
    "cz-customizable": "^7.4.0",
    "eslint": "^9.17.0",
    "husky": "^9.1.7",
    "lint-staged": "^15.3.0",
    "standard-version": "^9.5.0",
    "ts-node": "^10.9.2",
    "typescript": "^5.7.2"
  },
  "dependencies": {
    "inversify": "^6.2.1",
    "ollama": "^0.5.11",
    "openai": "^4.77.0"
  },
  "bundleDependencies": [
    "inversify",
    "ollama",
    "openai"
  ],
  "resolutions": {
    "@types/node": "16.x"
  },
  "license": "MIT",
  "config": {
    "commitizen": {
      "path": "node_modules/cz-customizable"
    }
  },
  "lint-staged": {
    "src/**/*.{ts}": "npm run lint"
  },
  "commitlint": {
    "extends": [
      "gitmoji"
    ],
    "rules": {
      "header-max-length": [
        2,
        "always",
        108
      ],
      "type-empty": [
        2,
        "never"
      ]
    }
  },
  "packageManager": "pnpm@9.1.3+sha512.7c2ea089e1a6af306409c4fc8c4f0897bdac32b772016196c469d9428f1fe2d5a21daf8ad6512762654ac645b5d9136bb210ec9a00afa8dbc4677843ba362ecd"
}